# -*- coding: utf-8 -*-
"""SuperstoreAnalysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HzlKxi_ZHci7BTi0kwC7v4Hm8YY3Tl7m
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
sns.set(style="whitegrid")

df = pd.read_csv ('/content/Sample - Superstore (1).csv', encoding = 'latin1')
#df.head()
df.columns
df.info()

"""# CHANGING DATA TYPE FOR **DATE COLUMNS**"""

df['Order Date'] = pd.to_datetime(df['Order Date'])
df['Ship Date'] = pd.to_datetime(df['Ship Date'])
df.info()

"""# CREATE **THREE NEW COLUMNS** FOR BETTER ANALYSIS"""

df['Order Month'] = df['Order Date'].dt.month
df['Order Year'] = df['Order Date'].dt.year
df['Order Day'] = df['Order Date'].dt.day
df.info()

"""# **QUESTION 1.**
YOU NEED TO CALCULATE THE MONTHLY SALES OF THE STORE AND IDENTIFY WHICH MONTH HAD THE HIGHEST SALES AND WHICH MONTH HAD THE LOWEST SALES

"""

sales_by_month = df.groupby('Order Month')['Sales'].sum()
sales_by_month

"""# **LINEPLOT FOR MONTHLY SALES ANALYSIS**"""

sales_by_month = df.groupby('Order Month')['Sales'].sum().reset_index()

plt.figure(figsize=(13,6))
sns.lineplot(x='Order Month', y='Sales', data=sales_by_month, marker='o')
plt.title('Monthly Sales Analysis')
plt.xlabel('Order Month')
plt.ylabel('Sales')
plt.tight_layout()
plt.show()

"""# **QUESTION 2.**

YOU NEED TO ANALYZE SALES BASED ON PRODUCT CATEGORIES AND DETEREMINE WHICH CATEGORY HAD THE LOWEST SALES AND WHICH CATEGORY HAS THE HIGHEST SALES

"""

sales_by_categories = df.groupby('Category')['Sales'].sum().reset_index()
sales_by_categories

plt.figure(figsize=(12,6))
genre_sales = df.groupby('Category')['Sales'].sum().reset_index()
top_genres = genre_sales.sort_values(by='Sales', ascending=False).head(10)
plt.pie(top_genres['Sales'], labels=top_genres['Category'], autopct='%1.1f%%', startangle=90)
plt.title('Sales By Categories')
plt.axis('equal')
plt.tight_layout()
plt.show()

"""# **QUESTION 3.**

 THE SALES ANALYSIS NEEDS TO BE DONE BASED ON SUB-CATEGORIES

# *Sales analysis by sub categories*
"""

sales_by_subcategories = df.groupby('Sub-Category')['Sales'].sum().reset_index()
sales_by_subcategories

plt.figure(figsize=(13,6))
sns.barplot(x='Sales', y='Sub-Category', data=sales_by_subcategories)
plt.title('Sales analysis of Sub-Category')
plt.xlabel(' Sales (millions)')
plt.ylabel('Sub-Category')
plt.tight_layout()
plt.show()

"""# **QUESTION 4.**

 YOU NEED TO ANALYZE THE MONTHLY PROFIT FROM SALES AND DETERMINE WHICH MONTH HAD THE HIGHEST PROFIT
"""

profit_by_month = df.groupby('Order Month')['Profit'].sum().reset_index()
profit_by_month

plt.figure(figsize=(13,6))
sns.scatterplot(x='Order Month', y='Profit', data=profit_by_month, marker='o')
plt.title('Monthly profit from sales')
plt.xlabel('Month')
plt.ylabel('Monthly profit')
plt.tight_layout()
plt.show()

"""# **QUESTION 5.**

 ANALYZE THE PROFIT BY CATEGORY AND SUB-CATEGORY

"""

pivot = df.pivot_table(values='Profit', index='Sub-Category', columns='Category', aggfunc='sum')

plt.figure(figsize=(10,6))
sns.heatmap(pivot, annot=True, fmt=".0f", cmap='coolwarm', center=0)
plt.title('Profit Heatmap by Category and Sub-Category')
plt.tight_layout()
plt.show()

"""# **QUESTION 6.**

 ANALYZE THE SALES AND PROFIT BY CUSTOMER SEGMENT
"""

sales_by_segment = df.groupby('Segment')['Sales'].sum().reset_index()

plt.figure(figsize=(8,5))
sns.barplot(x='Segment', y='Sales', data=sales_by_segment)
plt.title('Total Sales by Customer Segment')
plt.ylabel('Total Sales ($)')
plt.xlabel('Customer Segment')
plt.tight_layout()
plt.show()


profit_by_segment = df.groupby('Segment')['Profit'].sum().reset_index()

plt.figure(figsize=(8,5))
sns.barplot(x='Segment', y='Profit', data=profit_by_segment)
plt.title('Total Profit by Customer Segment')
plt.ylabel('Total Profit ($)')
plt.xlabel('Customer Segment')
plt.tight_layout()
plt.show()

"""# **QUESTION 7.**

 ANALYZE THE SALES TO PROFIT RATIO
"""

df['Profit_Margin'] = (df['Profit'] / df['Sales']) * 100
segment_margin = df.groupby('Segment')[['Profit', 'Sales']].sum().reset_index()
segment_margin['Profit_Margin (%)'] = (segment_margin['Profit'] / segment_margin['Sales']) * 100
print(segment_margin)

margin_by_subcat = df.groupby(['Category', 'Sub-Category'])[['Sales', 'Profit']].sum().reset_index()
margin_by_subcat['Profit_Margin (%)'] = (margin_by_subcat['Profit'] / margin_by_subcat['Sales']) * 100


pivot_margin = margin_by_subcat.pivot(index="Sub-Category", columns="Category", values="Profit_Margin (%)")

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(10,6))
sns.heatmap(pivot_margin, annot=True, fmt=".1f", cmap='RdYlGn', center=0)
plt.title('Profit Margin (%) by Category and Sub-Category')
plt.tight_layout()
plt.show()